--- #
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tdarr-worker
  namespace: media
  labels:
    app.kubernetes.io/name: tdarr-worker
    app.kubernetes.io/instance: tdarr-worker
spec:
  revisionHistoryLimit: 3
  replicas: 3
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: tdarr-worker
      app.kubernetes.io/instance: tdarr-worker
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tdarr-worker
        app.kubernetes.io/instance: tdarr-worker
    spec:
      serviceAccountName: default
      automountServiceAccountToken: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      nodeSelector:
        nodetype: worker
      containers:
        - env:
            - name: TZ
              value: America/Indianapolis
            - name: nodeID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: nodeIP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: serverIP
              value: tdarr
            - name: serverPort
              value: "8266"
            - name: ffmpegPath
              value: /usr/local/bin/ffmpeg
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
          image: haveagitgat/tdarr_node:2.13.01
          imagePullPolicy: IfNotPresent
          name: node
          volumeMounts:
            - mountPath: /media
              name: media
            - mountPath: /shared
              name: shared
          resources:
            limits:
              memory: 3963M
              cpu: 5m
            requests:
              memory: 218Mi
      podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups:
        - 100

      volumes:
        - name: media
          nfs:
            path: /volume1/Media
            server: ${NFS_SERVER}
            mountPath: /media
        - name: shared
          nfs:
            server: ${NFS_SERVER}
            path: ${NFS_MEDIA}/cache
